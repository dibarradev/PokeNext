@use "../../styles/abstracts/variables" as *;
@use "../../styles/abstracts/mixins" as *;

.searchInputToggleContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: $spacing-md;
  margin-block-end: $spacing-lg;
}

.search {
  width: 100%;
}

.searchInput {
  position: relative;
}

.input {
  width: 100%;
  padding: $spacing-sm $spacing-lg $spacing-sm $spacing-xxl;
  border: 2px solid var(--border-color);
  border-radius: $border-radius-lg;
  font-size: $font-size-base;
  background: var(--background-secondary);
  color: var(--text-primary);
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
  }

  &::placeholder {
    color: var(--text-secondary);
  }
}

.searchIcon {
  position: absolute;
  left: $spacing-md;
  top: 50%;
  transform: translateY(-50%);
  font-size: $font-size-lg;
  color: var(--text-secondary);
}

.viewToggle {
  display: flex;
  justify-content: center;
  //margin-block: $spacing-lg;
}

.sortResultsContainer {
  display: flex;
  flex-direction: column;
  margin-block-start: $spacing-md;
  margin-block-end: $spacing-xl;

  @media (min-width: $breakpoint-tablet) {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
}

.sort {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: $spacing-sm;
  border: none;
  padding: 0;
  margin: 0;

  legend {
    padding: 0;
    margin: 0;
  }

  @include mobile {
    flex-wrap: wrap;
  }
}

.sortGroup {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
}

.sortOrderGroup {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
}

.resultsInfo {
  display: flex;

  @media (min-width: $breakpoint-tablet) {
    margin-block-start: 0;
  }
}

.results {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  color: var(--text-secondary);
  font-size: $font-size-small;
  margin-block-start: $spacing-md;

  @media (min-width: $breakpoint-tablet) {
    margin-block-start: 0;
  }
}

.label {
  font-weight: 500;
  color: var(--text-primary);
  font-size: $font-size-small;
}

.select {
  padding: $spacing-xs $spacing-sm;
  border: 1px solid var(--border-color);
  border-radius: $border-radius-sm;
  background: var(--background-secondary);
  color: var(--text-primary);
  font-size: $font-size-small;
  cursor: pointer;
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: var(--primary);
  }
}

.sortOrder {
  padding: $spacing-xs;
  border: 1px solid var(--border-color);
  border-radius: $border-radius-sm;
  background: var(--background-secondary);
  color: var(--text-primary);
  font-size: $font-size-lg;
  cursor: pointer;
  transition: all 0.2s ease;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: var(--background-hover);
  }

  &.desc {
    background: var(--primary);
    color: var(--white);

    &:hover {
      background: var(--primary-dark);
    }
  }
}

.types {
  margin-block-start: $spacing-lg;
  border: none;
  padding: 0;
  margin-inline: 0;

  legend {
    padding: 0;
    margin-bottom: 0;
  }
}

.typesHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-block-end: $spacing-sm;

  legend {
    width: auto;
  }
}

.typesList {
  display: flex;
  flex-wrap: wrap;
  gap: $spacing-sm;
}

.typeButton {
  padding: $spacing-xs $spacing-sm;
  border: 1px solid transparent;
  border-radius: $border-radius-sm;
  font-size: $font-size-small;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: capitalize;
  opacity: 0.7;

  &:hover {
    opacity: 1;
    transform: translateY(-1px);
  }

  &.active {
    opacity: 1;
    border-color: var(--white);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transform: translateY(-1px);
  }

  // Pokemon type colors
  @each $type, $color in $pokemon-types {
    &.#{$type} {
      background-color: #{$color};
      color: var(--white);

      &:hover {
        background-color: #{$color};
        opacity: 0.8;
      }
    }
  }
}

.clearTypes {
  background: none;
  border: 1px solid var(--border-color);
  color: var(--primary);
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-sm;
  font-size: $font-size-small;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: var(--primary);
    color: var(--white);
  }
}
